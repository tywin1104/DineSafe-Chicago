package main;

import java.text.DateFormat;
import java.text.ParseException; 
import java.text.SimpleDateFormat;
import java.util.Date;

public class Inspection{
	enum ResultT {
		PASS, CONDITIONALPASS, FAIL, INVALID, CLOSED; 
	}
	
	private ResultT result;
	private final String violation;
	private final Date time;

	@Override
	public String toString() {
		return "Inspection [result=" + result + ", time=" + time + "]";
	}

	public Inspection(ResultT result, String violation, String timeStr) {
		this.result = result;
		this.violation = violation;
		this.time = parseTime(timeStr);
	}

	public ResultT getResult() {
		return result;
	}

	public String getViolation() {
		return violation;
	}

	public Date getTime() {
		return time;
	}

	private Date parseTime(String dateStr) {
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy"); 
		Date startDate = null;
		try {
		    startDate = df.parse(dateStr);
		    String newDateString = df.format(startDate);
		} catch (ParseException e) {
		    e.printStackTrace();
		}
		return startDate;
	}
	
	public int getViolationNumber() {
		if(this.violation.isEmpty()) {
			return 0;
		}
		String[] splitViolationStr = this.violation.trim().split("\\s+");
		return Integer.parseInt(splitViolationStr[0]);
	}
	
	public int CalcInspectionScore() {
		int inspectionScore = 0;
		if(this.getResult() == ResultT.PASS) {
			inspectionScore = 100;
		}
		else if(this.getResult() == ResultT.CONDITIONALPASS) {
			int condition = this.getViolationNumber();
			if(condition <= 14) {
				inspectionScore = 50;
			}
			else if(condition <= 29) {
				inspectionScore = 70;
			}
			else {
				inspectionScore = 85;
			}
		}
		return inspectionScore;
	}
	
	public static void main(String[] args) {
		/***
		Inspection inspection1 = new Inspection(ResultT.CONDITIONALPASS,"1 PERSON IN CHARGE PRESENT DEMONSTRATES KNOWLEDGE AND PERFORMS DUTIES - Comments: PIC DOESN'T DEMONSTRATE KNOWLEDGE OF FOOD OPERATION MUST PROVIDE PRIORITY FOUNDATION NO CITATION ISSUED | 2 CITY OF CHICAGO FOOD SERVICE SANITATION CERTIFICATE - Comments: PIC DOES NOT HAVE A CITY OF CHICAGO SANITATION CERTIFICATE OBSERVED NO PIC WITH AN ORIGINAL AND VALID CITY OF CHICAGO FOOD SERVICE SANITATION CERTIFICATE AS REQUIRED PRIORITY FOUNDATION VIOLATION 7-38-012 CITATION ISSUED | 3 MANAGEMENT FOOD EMPLOYEE AND CONDITIONAL EMPLOYEE; KNOWLEDGE RESPONSIBILITIES AND REPORTING - Comments: OBSERVED NO WRITTEN EMPLOYEE HEALTH POLICY ON THE PREMISES MANAGEMENT INSTRUCTED TO PROVIDE A SIGNED EMPLOYEE HEALTH POLICY FOR EACH EMPLOYEE PRIORITY FOUNDATION 7-38-010 NO CITATION ISSUED - | 5 PROCEDURES FOR RESPONDING TO VOMITING AND DIARRHEAL EVENTS - Comments: OBSERVED NO CLEAN UP PROCEDURE ON THE PREMISES FOR VOMIT AND DIARRHEAL EVENTS MANAGEMENT INSTRUCTED TO PROVIDE A CLEAN UP PROCEDURE AND THE NECESSARY CLEANING ITEMS ON THE PREMISES PRIORITY FOUNDATION 7-38-005 NO CITATION ISSUED | 10 ADEQUATE HANDWASHING SINKS PROPERLY SUPPLIED AND ACCESSIBLE - Comments: NO HAND WASHING SIGNAGE AT KITCHEN HAND SINK INSTRUCTED TO PROVIDE AND TO MAINTAIN | 23 PROPER DATE MARKING AND DISPOSITION - Comments: OBSERVED READY-TO-EAT TCS FOODS HELD FOR MORE THAN 24 HOURS (SOUPS PREPARED CHICKEN) NOT DATE MARKED TO INDICATE THE DATE IN WHICH THE FOOD MUST BE CONSUMED OR DISCARDED MANAGEMENT INSTRUCTED TO DATE MARK ALL READY-TO-EAT TCS FOODS HELD MORE THAN 24 HOURS PRIORITY FOUNDATION 7-38-005 NO CITATION ISSUED - | 25 CONSUMER ADVISORY PROVIDED FOR RAW/UNDERCOOKED FOOD - Comments: OBSERVED NO CONSUMER ADVISORY DISCLOSURE AND REMINDER STATEMENT ON THE MENU MANAGEMENT INSTRUCTED TO DISCLOSE WHICH FOODS CAN BE ORDERED RAW OR UNDER COOKED AND LINK THOSE FOODS TO A REMINDER STATEMENT THAT STATES THAT EATING RAW OR UNDER COOKED FOODS CAN INCREASE YOUR RISK OF FOOD BORNE ILLNESS PRIORITY FOUNDATION 7-38-005 NO CITATION ISSUED - | 40 PERSONAL CLEANLINESS - Comments: OBSERVED NO PIC IN KITCHEN WITH NO HAIR RESTRAINT INSTRUCTED TO PROVIDE WHEN WORKING AROUND OPEN FOODS AND TO MAINTAIN | 44 UTENSILS EQUIPMENT & LINENS: PROPERLY STORED DRIED & HANDLED - Comments: INSTRUCTED TO PROPERLY STORE AND INVERT CLEAN DISHWARE AND POTS/PANS IN KITCHEN TO PREVENT CONTAMINATION BEFORE USE AND TO MAINTAIN | 51 PLUMBING INSTALLED; PROPER BACKFLOW DEVICES - Comments: BACK FLOW PREVENTION DEVICE NOT LOCATED AT ICE MAKER INSTRUCTED TO INSTALL SO THAT IT CAN BE LOCATED TO BE SERVICED AND MAINTAINED - - | 51 PLUMBING INSTALLED; PROPER BACKFLOW DEVICES - Comments: OBSERVED SLOW DRAINING KITCHEN HAND SINK INSTRUCTED TO REPAIR PLUMBING AND MAINTAIN | 56 ADEQUATE VENTILATION & LIGHTING; DESIGNATED AREAS USED - Comments: OBSERVED BURNT-OUT LIGHT BULB AT KITCHEN EXHAUST HOOD INSTRUCTED TO PROVIDE ADEQUATE LIGHTING AND TO MAINTAIN","03/05/2019");
		Inspection inspection2 = new Inspection(ResultT.INVALID,"41 WIPING CLOTHS: PROPERLY USED & STORED - Comments: ALL WIPING CLOTHES SMUST BE STORED IN A CLEAN SANITIZING SOLUTION MUST CORRECT AND MAINTAIN | 47 FOOD & NON-FOOD CONTACT SURFACES CLEANABLE PROPERLY DESIGNED CONSTRUCTED & USED - Comments: ALL HANDSINKS IN NEED OF CLEANING TO REMOVE ALL BUILD UP MUST CLEAN AND MAINTAIN | 49 NON-FOOD/FOOD CONTACT SURFACES CLEAN - Comments: ALL FOOD CONTACT SURFACES MUST BE CLEANED AND SANITIZED AFTER EACH USE CORRECT AND MAINTAIN | 53 TOILET FACILITIES: PROPERLY CONSTRUCTED SUPPLIED & CLEANED - Comments: TOILET ROOMS IN NEED OF CLEANING AND SANITIZING MUST CLEAN DAILY CORRECT AND MAINTAIN | 55 PHYSICAL FACILITIES INSTALLED MAINTAINED & CLEAN - Comments: FLOORS AND WALLS IN REAR PREP AREA IN NEED OF CLEANING TO REMOVE ALL FOOD SPLATTERS MUST CLEAN AND MAINTAIN","03/05/2019");
		Inspection inspection3 = new Inspection(ResultT.CONDITIONALPASS,"","03/05/2019");
		Inspection inspection4 = new Inspection(ResultT.FAIL,"23 aaaaaa","03/05/2017");
		
		System.out.println(inspection1.toString());
		System.out.println(inspection2.toString());
		System.out.println(inspection3.getTime());
		System.out.println(inspection4.getTime());
		
		System.out.print(inspection3.getViolationNumber());
		***/
	}

	

}
